{"version":3,"file":"component---src-pages-categories-js-e9aeaa5662e3d66c8817.js","mappings":"iPAEaA,EAAcC,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,0CAKXC,EAASD,EAAAA,QAAAA,GAAAA,WAAH,wDAAGA,CAAH,iGAMNE,EAAWF,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,2FAORG,EAAsBH,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,mZAqB5BC,EAAWC,GCnCTE,EAAW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAClB,OADgD,EAAvBC,mBACGD,EAC1B,gBAAC,EAAD,SAAYA,GAEZ,gBAAC,EAAAE,KAAD,CAAMC,GAAE,iBAAmBH,GACzB,gBAAC,EAAD,SAAcA,GAGnB,EAmBD,EAjBqB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,iBAAkBG,EAAiB,EAAjBA,WACxC,OACE,gBAAC,EAAD,KACE,gBAAC,EAAD,KACE,gBAACL,EAAD,CAAUC,MAAM,MAAMC,iBAAkBA,IACvCG,EAAWC,KAAI,SAACC,EAAMC,GAAP,OACd,gBAACR,EAAD,CACES,IAAKD,EACLP,MAAOM,EAAKG,WACZR,iBAAkBA,GAJN,KAUvB,E,mBC0BD,EA7CqB,SAAC,GAAc,IAClC,EADiC,EAAXS,KACQC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACRC,GAAiBC,EAAAA,EAAAA,KAAxB,GAEMX,EAAaY,IAAQH,EAAO,CAAC,cAAe,CAAC,QAC7CI,EAAgBL,EAAMM,QAC1B,SAAAC,GAAI,MACgB,QAAlBL,GAA2BK,EAAKC,YAAYC,WAAaP,CADvD,IAIN,OACE,gBAAC,IAAD,KACE,gBAACQ,EAAA,EAAD,CAAKtB,MAAM,eACX,gBAACuB,EAAA,EAAD,oBACA,gBAAC,EAAD,CAActB,iBAAkBa,EAAeV,WAAYA,IAC3D,gBAACoB,EAAA,EAAD,CAASC,GAAG,MACZ,gBAACC,EAAA,EAAD,CAAUC,SAAUV,IAGzB,C","sources":["webpack://ch4md0m/./src/components/CategoryList/style.js","webpack://ch4md0m/./src/components/CategoryList/index.jsx","webpack://ch4md0m/./src/pages/categories.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FlexWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Active = styled.li`\n  color: var(--categoryTextColor);\n  border: 1px solid var(--categoryTextColor);\n  border-radius: 6px;\n`;\n\nexport const Disabled = styled.li`\n  color: var(--textColor);\n  border: 1px solid transparent;\n  border-radius: 6px;\n  cursor: pointer;\n`;\n\nexport const CategoryListWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 0.3rem;\n  padding: 2rem 0 1.5rem;\n  list-style: none;\n  font-size: 1.5rem;\n  font-weight: 500;\n  letter-spacing: 0.1rem;\n  overflow-x: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  z-index: 200;\n  transition: top 0.5s;\n  text-transform: uppercase;\n\n  &::-webkit-scrollbar {\n    display: none !important;\n  }\n\n  ${Active}, ${Disabled} {\n    flex: 0 0 auto;\n    padding: 0.7rem 1.2rem;\n    background: transparent;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n// CSS\nimport * as S from './style';\n\nconst Category = ({ title, selectedCategory }) => {\n  return selectedCategory === title ? (\n    <S.Active>#{title}</S.Active>\n  ) : (\n    <Link to={`/categories?q=${title}`}>\n      <S.Disabled>#{title}</S.Disabled>\n    </Link>\n  );\n};\n\nconst CategoryList = ({ selectedCategory, categories }) => {\n  return (\n    <S.FlexWrapper>\n      <S.CategoryListWrapper>\n        <Category title=\"all\" selectedCategory={selectedCategory} />\n        {categories.map((item, idx) => (\n          <Category\n            key={idx}\n            title={item.fieldValue}\n            selectedCategory={selectedCategory}\n          />\n        ))}\n      </S.CategoryListWrapper>\n    </S.FlexWrapper>\n  );\n};\n\nexport default CategoryList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport orderBy from 'lodash/orderBy';\n\nimport useQuery from '../hooks/useQuery';\nimport Layout from '../layout';\nimport Seo from '../components/Seo';\nimport PageTitle from '../components/PageTitle';\nimport CategoryList from '../components/CategoryList';\nimport Divider from '../components/Divider';\nimport PostList from '../components/PostList';\n\nconst CategoryPage = ({ data }) => {\n  const { nodes, group } = data.allMdx;\n  const [selectedQuery] = useQuery();\n\n  const categories = orderBy(group, ['fieldValue'], ['asc']);\n  const filteredPosts = nodes.filter(\n    post =>\n      selectedQuery === 'all' || post.frontmatter.category === selectedQuery,\n  );\n\n  return (\n    <Layout>\n      <Seo title=\"Categories\" />\n      <PageTitle>Categories.</PageTitle>\n      <CategoryList selectedCategory={selectedQuery} categories={categories} />\n      <Divider mt=\"0\" />\n      <PostList postList={filteredPosts} />\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        id\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          category\n          date(formatString: \"YYYY년 M월 D일\")\n          tags\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryPage;\n"],"names":["FlexWrapper","styled","Active","Disabled","CategoryListWrapper","Category","title","selectedCategory","Link","to","categories","map","item","idx","key","fieldValue","data","allMdx","nodes","group","selectedQuery","useQuery","orderBy","filteredPosts","filter","post","frontmatter","category","Seo","PageTitle","Divider","mt","PostList","postList"],"sourceRoot":""}